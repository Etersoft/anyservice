#!/bin/sh

PIDFile=$(pwd)/test.pid
User="guest"
WorkingDirectory=$(realpath .)
ExecStart="test_process"
LOGDIR=./
NEWSERVNAME="test"

#Install test suite: # wget http://shunit2.googlecode.com/files/shunit2-2.1.6.tgz && tar zxvf shunit2-2.1.6.tgz
shunit2=/srv/danil/Projects/createPackage/shunit2/shunit2-2.1.6/src/shunit2

my_start(){
    echo runned

    background_dir=$WorkingDirectory/test_${1}/
    #mkdir -p $background_dir
    

    #TODO give start command arguments after -- #example: sleep -- 100
    sudo /sbin/start-stop-daemon --start --pidfile $PIDFile $1 --make-pidfile -c $User --exec $WorkingDirectory/$ExecStart --startas "$WorkingDirectory/$ExecStart" -- $background_dir &> $LOGDIR/$NEWSERVNAME_$1.log
    echo "start-stop exit status $?" >> $LOGDIR/$NEWSERVNAME.log
    cd $background_dir
}

test4shunit2_with_background(){
    #sudo /sbin/start-stop-daemon --start --pidfile $PIDFile --background --make-pidfile --chuid $User --exec "$WorkingDirectory/$ExecStart" &> $LOGDIR/$NEWS
    my_start "--background"
}

testPid(){
    realpid=$(cat my.pid)
    #cat $PIDFile
    #echo $realpid
    sspid=$(cat $PIDFile)
    my_assert_equals "$sspid" "$realpid" "ss-pid $sspid $realpid"
}

testUser(){
    my_assert_equals "$User" $(cat my.user) User
}

testDir(){
    my_assert_equals "$WorkingDirectory" "$(cat my.dir)" "Dir"
}

testHome(){
    my_assert_equals "/home/$User" "$(cat my.home)" "Home dir"
    #[ "$1" = "$2" ] && echo "Тест $3 прошёл" || echo "Тест $3 не прошёл"
}

my_assert_equals(){
    assertEquals "$3" "$1" "$2"
}

_test_bg(){
    #    echo "Test without background"
    /sbin/start-stop-daemon --start --pidfile $PIDFile --make-pidfile --user $User --exec "$WorkingDirectory/${ExecStart}_bg" &> $LOGDIR/$NEWSERVNAME.log
    testPid
}


#TODO rewrite

test4shunit2_without_background(){
    my_start
}

testPid(){
    realpid=$(cat my.pid)
    #cat $PIDFile
    #echo $realpid
    sspid=$(cat $PIDFile)
    my_assert_equals "$sspid" "$realpid" "ss-pid $sspid $realpid"
}

testUser(){
    my_assert_equals "$User" $(cat my.user) User
}

testDir(){
    my_assert_equals "$WorkingDirectory" "$(cat my.dir)" "Dir"
}

testHome(){
    my_assert_equals "/home/$User" "$(cat my.home)" "Home dir"
    #[ "$1" = "$2" ] && echo "Тест $3 прошёл" || echo "Тест $3 не прошёл"
}

my_assert_equals(){
    assertEquals "$3" "$1" "$2"
}



. $shunit2 #include test suite
