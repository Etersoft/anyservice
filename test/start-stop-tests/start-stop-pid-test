#!/bin/sh

PIDFile=$(pwd)/test.pid
User=$USER
WorkingDirectory=./
ExecStart="test_process.sh"
LOGDIR=./
NEWSERVNAME="test"


#/sbin/start-stop-daemon --start --exec /bin/su --pidfile $PIDFile --make-pidfile --user $User -- -s /bin/sh -l $User -c "cd $WorkingDirectory ; exec $ExecStart &" &> $LOGDIR/$NEWSERVNAME.log
#/sbin/start-stop-daemon --start --exec /bin/su --pidfile $PIDFile --make-pidfile -b --user $User -- -s /bin/sh -l $User -c "cd $WorkingDirectory ; exec $ExecStart &" &> $LOGDIR/$NEWSERVNAME.log

#TODO give start command arguments after -- #example: sleep -- 100
/sbin/start-stop-daemon --start --pidfile $PIDFile --make-pidfile --background --user $User --startas "$ExecStart" &> $LOGDIR/$NEWSERVNAME.log

pid_test(){
    realpid=$(cat my.pid)
    realpid=$(ps aux | grep -v grep | grep -m1 ".*${ExecStart}" | awk '{print $2}')
    #cat $PIDFile
    #echo $realpid
    my_assert_equals "$(cat $PIDFile)" "$realpid" "pid"
}

user_test(){
    realuser=$(cat my.user)
    my_assert_equals "$User" $(cat my.user) User
}

dir_test(){
    realdir=$(cat my.dir)
    my_assert_equals "/home/$User" "$(cat my.dir)" "Dir"
}

my_assert_equals(){
    [ "$1" = "$2" ] && echo "Тест $3 прошёл" || echo "Тест $3 не прошёл"
}

pid_test